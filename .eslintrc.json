{
  "plugins": ["react-hooks"],
  "extends": ["standard", "prettier"],
  "rules": {
    "curly": ["warn", "multi-line"],
    "default-param-last": "error",
    "no-constant-condition": "warn",
    "no-empty-function": "error",
    "no-param-reassign": "warn",
    "no-use-before-define": ["error", "nofunc"],
    "one-var": ["warn", "never"],
    "prefer-const": "warn",
    "prefer-template": "warn",
    "prefer-object-spread": "warn",
    "sort-imports": [
      "warn",
      {
        "ignoreDeclarationSort": true
      }
    ],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "order": "asc"
        }
      }
    ],
    "react-hooks/rules-of-hooks": "warn",
    "react-hooks/exhaustive-deps": "warn"
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint"],
      "extends": [
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked"
      ],
      "settings": {
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true
          }
        }
      },
      "parserOptions": {
        "project": ["./tsconfig.json", "./tsconfig.*.json"]
      },
      "rules": {
        "@typescript-eslint/array-type": "warn",
        "@typescript-eslint/consistent-type-assertions": [
          "warn",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "never"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": ["warn", "type"],
        "@typescript-eslint/consistent-type-exports": "warn",
        "@typescript-eslint/consistent-type-imports": [
          "warn",
          {
            "fixStyle": "inline-type-imports"
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "warn",
          {
            "allowExpressions": true
          }
        ],
        "@typescript-eslint/no-misused-promises": [
          "warn",
          {
            "checksVoidReturn": false
          }
        ],
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error", "nofunc"],
        "@typescript-eslint/prefer-nullish-coalescing": [
          "error",
          {
            "ignorePrimitives": true
          }
        ],
        "@typescript-eslint/restrict-template-expressions": "off",
        "prefer-const": "warn"
      }
    }
  ]
}
